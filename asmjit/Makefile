# Makefile.in generated by automake 1.9.6 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# AsmJit makefile


srcdir = .
top_srcdir = .

pkgdatadir = $(datadir)/asmjit
pkglibdir = $(libdir)/asmjit
pkgincludedir = $(includedir)/asmjit
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = .
DIST_COMMON = README $(am__configure_deps) $(noinst_HEADERS) \
	$(srcdir)/../depcomp $(srcdir)/../install-sh \
	$(srcdir)/../missing $(srcdir)/../mkinstalldirs \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(top_srcdir)/configure ABOUT-NLS \
	AUTHORS COPYING ChangeLog INSTALL NEWS config.rpath
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libAsmJit_a_AR = $(AR) $(ARFLAGS)
libAsmJit_a_LIBADD =
am_libAsmJit_a_OBJECTS = assembler.$(OBJEXT) assert.$(OBJEXT) \
	codegen.$(OBJEXT) compiler.$(OBJEXT) context.$(OBJEXT) \
	cpu.$(OBJEXT) defs.$(OBJEXT) error.$(OBJEXT) func.$(OBJEXT) \
	logger.$(OBJEXT) memorymanager.$(OBJEXT) podvector.$(OBJEXT) \
	runtime.$(OBJEXT) string.$(OBJEXT) vmem.$(OBJEXT) \
	zone.$(OBJEXT) x86assembler.$(OBJEXT) x86compiler.$(OBJEXT) \
	x86context.$(OBJEXT) x86cpu.$(OBJEXT) x86defs.$(OBJEXT) \
	x86func.$(OBJEXT)
libAsmJit_a_OBJECTS = $(am_libAsmJit_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libAsmJit_a_SOURCES)
DIST_SOURCES = $(libAsmJit_a_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/stefan/Seafile/sources-sync/nano-vm-code/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/stefan/Seafile/sources-sync/nano-vm-code/missing --run tar
AUTOCONF = ${SHELL} /home/stefan/Seafile/sources-sync/nano-vm-code/missing --run autoconf
AUTOHEADER = ${SHELL} /home/stefan/Seafile/sources-sync/nano-vm-code/missing --run autoheader
AUTOMAKE = ${SHELL} /home/stefan/Seafile/sources-sync/nano-vm-code/missing --run automake-1.9
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/stefan/Seafile/sources-sync/nano-vm-code/missing --run makeinfo
OBJEXT = o
PACKAGE = asmjit
PACKAGE_BUGREPORT = BUG-REPORT-ADDRESS
PACKAGE_NAME = AsmJit
PACKAGE_STRING = AsmJit 1.1
PACKAGE_TARNAME = asmjit
PACKAGE_URL = 
PACKAGE_VERSION = 1.1
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.1
ac_ct_CC = gcc
ac_ct_CXX = g++
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/stefan/Seafile/sources-sync/nano-vm-code/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
noinst_LIBRARIES = libAsmJit.a
libAsmJit_a_SOURCES = base/assembler.cpp \
	base/assert.cpp \
	base/codegen.cpp \
	base/compiler.cpp \
	base/context.cpp  \
	base/cpu.cpp \
	base/defs.cpp \
	base/error.cpp \
	base/func.cpp \
	base/logger.cpp \
	base/memorymanager.cpp \
	base/podvector.cpp \
	base/runtime.cpp \
	base/string.cpp \
	base/vmem.cpp \
	base/zone.cpp \
	x86/x86assembler.cpp \
	x86/x86compiler.cpp \
	x86/x86context.cpp \
	x86/x86cpu.cpp \
	x86/x86defs.cpp \
	x86/x86func.cpp

noinst_HEADERS = x86/x86assembler.h \
	x86/x86compiler.h \
	x86/x86context_p.h \
	x86/x86cpu.h \
	x86/x86defs.h \
	x86/x86func.h \
	asmjit.h \
	base.h \
	build.h \
	config.h \
	host.h \
	x86.h \
	base/apibegin.h \
	base/apiend.h \
	base/assembler.h \
	base/assert.h \
	base/codegen.h \
	base/context_p.h \
	base/cpu.h \
	base/defs.h \
	base/error.h \
	base/func.h \
	base/globals.h \
	base/intutil.h \
	base/lock.h \
	base/logger.h \
	base/memorymanager.h \
	base/podlist.h \
	base/podvector.h \
	base/runtime.h \
	base/string.h \
	base/vectypes.h \
	base/vmem.h \
	base/zone.h

AM_CFLAGS = -O0 -g -fPIC
AM_CPPFLAGS = -fPIC
AM_LDFLAGS = 
SUBDIRS = 
ACLOCAL_AMFLAGS = -I m4
EXTRA_DIST = config.rpath
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu '; \
	      cd $(srcdir) && $(AUTOMAKE) --gnu  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libAsmJit.a: $(libAsmJit_a_OBJECTS) $(libAsmJit_a_DEPENDENCIES) 
	-rm -f libAsmJit.a
	$(libAsmJit_a_AR) libAsmJit.a $(libAsmJit_a_OBJECTS) $(libAsmJit_a_LIBADD)
	$(RANLIB) libAsmJit.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/assembler.Po
include ./$(DEPDIR)/assert.Po
include ./$(DEPDIR)/codegen.Po
include ./$(DEPDIR)/compiler.Po
include ./$(DEPDIR)/context.Po
include ./$(DEPDIR)/cpu.Po
include ./$(DEPDIR)/defs.Po
include ./$(DEPDIR)/error.Po
include ./$(DEPDIR)/func.Po
include ./$(DEPDIR)/logger.Po
include ./$(DEPDIR)/memorymanager.Po
include ./$(DEPDIR)/podvector.Po
include ./$(DEPDIR)/runtime.Po
include ./$(DEPDIR)/string.Po
include ./$(DEPDIR)/vmem.Po
include ./$(DEPDIR)/x86assembler.Po
include ./$(DEPDIR)/x86compiler.Po
include ./$(DEPDIR)/x86context.Po
include ./$(DEPDIR)/x86cpu.Po
include ./$(DEPDIR)/x86defs.Po
include ./$(DEPDIR)/x86func.Po
include ./$(DEPDIR)/zone.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

assembler.o: base/assembler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT assembler.o -MD -MP -MF "$(DEPDIR)/assembler.Tpo" -c -o assembler.o `test -f 'base/assembler.cpp' || echo '$(srcdir)/'`base/assembler.cpp; \
	then mv -f "$(DEPDIR)/assembler.Tpo" "$(DEPDIR)/assembler.Po"; else rm -f "$(DEPDIR)/assembler.Tpo"; exit 1; fi
#	source='base/assembler.cpp' object='assembler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o assembler.o `test -f 'base/assembler.cpp' || echo '$(srcdir)/'`base/assembler.cpp

assembler.obj: base/assembler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT assembler.obj -MD -MP -MF "$(DEPDIR)/assembler.Tpo" -c -o assembler.obj `if test -f 'base/assembler.cpp'; then $(CYGPATH_W) 'base/assembler.cpp'; else $(CYGPATH_W) '$(srcdir)/base/assembler.cpp'; fi`; \
	then mv -f "$(DEPDIR)/assembler.Tpo" "$(DEPDIR)/assembler.Po"; else rm -f "$(DEPDIR)/assembler.Tpo"; exit 1; fi
#	source='base/assembler.cpp' object='assembler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o assembler.obj `if test -f 'base/assembler.cpp'; then $(CYGPATH_W) 'base/assembler.cpp'; else $(CYGPATH_W) '$(srcdir)/base/assembler.cpp'; fi`

assert.o: base/assert.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT assert.o -MD -MP -MF "$(DEPDIR)/assert.Tpo" -c -o assert.o `test -f 'base/assert.cpp' || echo '$(srcdir)/'`base/assert.cpp; \
	then mv -f "$(DEPDIR)/assert.Tpo" "$(DEPDIR)/assert.Po"; else rm -f "$(DEPDIR)/assert.Tpo"; exit 1; fi
#	source='base/assert.cpp' object='assert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o assert.o `test -f 'base/assert.cpp' || echo '$(srcdir)/'`base/assert.cpp

assert.obj: base/assert.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT assert.obj -MD -MP -MF "$(DEPDIR)/assert.Tpo" -c -o assert.obj `if test -f 'base/assert.cpp'; then $(CYGPATH_W) 'base/assert.cpp'; else $(CYGPATH_W) '$(srcdir)/base/assert.cpp'; fi`; \
	then mv -f "$(DEPDIR)/assert.Tpo" "$(DEPDIR)/assert.Po"; else rm -f "$(DEPDIR)/assert.Tpo"; exit 1; fi
#	source='base/assert.cpp' object='assert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o assert.obj `if test -f 'base/assert.cpp'; then $(CYGPATH_W) 'base/assert.cpp'; else $(CYGPATH_W) '$(srcdir)/base/assert.cpp'; fi`

codegen.o: base/codegen.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT codegen.o -MD -MP -MF "$(DEPDIR)/codegen.Tpo" -c -o codegen.o `test -f 'base/codegen.cpp' || echo '$(srcdir)/'`base/codegen.cpp; \
	then mv -f "$(DEPDIR)/codegen.Tpo" "$(DEPDIR)/codegen.Po"; else rm -f "$(DEPDIR)/codegen.Tpo"; exit 1; fi
#	source='base/codegen.cpp' object='codegen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o codegen.o `test -f 'base/codegen.cpp' || echo '$(srcdir)/'`base/codegen.cpp

codegen.obj: base/codegen.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT codegen.obj -MD -MP -MF "$(DEPDIR)/codegen.Tpo" -c -o codegen.obj `if test -f 'base/codegen.cpp'; then $(CYGPATH_W) 'base/codegen.cpp'; else $(CYGPATH_W) '$(srcdir)/base/codegen.cpp'; fi`; \
	then mv -f "$(DEPDIR)/codegen.Tpo" "$(DEPDIR)/codegen.Po"; else rm -f "$(DEPDIR)/codegen.Tpo"; exit 1; fi
#	source='base/codegen.cpp' object='codegen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o codegen.obj `if test -f 'base/codegen.cpp'; then $(CYGPATH_W) 'base/codegen.cpp'; else $(CYGPATH_W) '$(srcdir)/base/codegen.cpp'; fi`

compiler.o: base/compiler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compiler.o -MD -MP -MF "$(DEPDIR)/compiler.Tpo" -c -o compiler.o `test -f 'base/compiler.cpp' || echo '$(srcdir)/'`base/compiler.cpp; \
	then mv -f "$(DEPDIR)/compiler.Tpo" "$(DEPDIR)/compiler.Po"; else rm -f "$(DEPDIR)/compiler.Tpo"; exit 1; fi
#	source='base/compiler.cpp' object='compiler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compiler.o `test -f 'base/compiler.cpp' || echo '$(srcdir)/'`base/compiler.cpp

compiler.obj: base/compiler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compiler.obj -MD -MP -MF "$(DEPDIR)/compiler.Tpo" -c -o compiler.obj `if test -f 'base/compiler.cpp'; then $(CYGPATH_W) 'base/compiler.cpp'; else $(CYGPATH_W) '$(srcdir)/base/compiler.cpp'; fi`; \
	then mv -f "$(DEPDIR)/compiler.Tpo" "$(DEPDIR)/compiler.Po"; else rm -f "$(DEPDIR)/compiler.Tpo"; exit 1; fi
#	source='base/compiler.cpp' object='compiler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compiler.obj `if test -f 'base/compiler.cpp'; then $(CYGPATH_W) 'base/compiler.cpp'; else $(CYGPATH_W) '$(srcdir)/base/compiler.cpp'; fi`

context.o: base/context.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT context.o -MD -MP -MF "$(DEPDIR)/context.Tpo" -c -o context.o `test -f 'base/context.cpp' || echo '$(srcdir)/'`base/context.cpp; \
	then mv -f "$(DEPDIR)/context.Tpo" "$(DEPDIR)/context.Po"; else rm -f "$(DEPDIR)/context.Tpo"; exit 1; fi
#	source='base/context.cpp' object='context.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o context.o `test -f 'base/context.cpp' || echo '$(srcdir)/'`base/context.cpp

context.obj: base/context.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT context.obj -MD -MP -MF "$(DEPDIR)/context.Tpo" -c -o context.obj `if test -f 'base/context.cpp'; then $(CYGPATH_W) 'base/context.cpp'; else $(CYGPATH_W) '$(srcdir)/base/context.cpp'; fi`; \
	then mv -f "$(DEPDIR)/context.Tpo" "$(DEPDIR)/context.Po"; else rm -f "$(DEPDIR)/context.Tpo"; exit 1; fi
#	source='base/context.cpp' object='context.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o context.obj `if test -f 'base/context.cpp'; then $(CYGPATH_W) 'base/context.cpp'; else $(CYGPATH_W) '$(srcdir)/base/context.cpp'; fi`

cpu.o: base/cpu.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cpu.o -MD -MP -MF "$(DEPDIR)/cpu.Tpo" -c -o cpu.o `test -f 'base/cpu.cpp' || echo '$(srcdir)/'`base/cpu.cpp; \
	then mv -f "$(DEPDIR)/cpu.Tpo" "$(DEPDIR)/cpu.Po"; else rm -f "$(DEPDIR)/cpu.Tpo"; exit 1; fi
#	source='base/cpu.cpp' object='cpu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cpu.o `test -f 'base/cpu.cpp' || echo '$(srcdir)/'`base/cpu.cpp

cpu.obj: base/cpu.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cpu.obj -MD -MP -MF "$(DEPDIR)/cpu.Tpo" -c -o cpu.obj `if test -f 'base/cpu.cpp'; then $(CYGPATH_W) 'base/cpu.cpp'; else $(CYGPATH_W) '$(srcdir)/base/cpu.cpp'; fi`; \
	then mv -f "$(DEPDIR)/cpu.Tpo" "$(DEPDIR)/cpu.Po"; else rm -f "$(DEPDIR)/cpu.Tpo"; exit 1; fi
#	source='base/cpu.cpp' object='cpu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cpu.obj `if test -f 'base/cpu.cpp'; then $(CYGPATH_W) 'base/cpu.cpp'; else $(CYGPATH_W) '$(srcdir)/base/cpu.cpp'; fi`

defs.o: base/defs.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT defs.o -MD -MP -MF "$(DEPDIR)/defs.Tpo" -c -o defs.o `test -f 'base/defs.cpp' || echo '$(srcdir)/'`base/defs.cpp; \
	then mv -f "$(DEPDIR)/defs.Tpo" "$(DEPDIR)/defs.Po"; else rm -f "$(DEPDIR)/defs.Tpo"; exit 1; fi
#	source='base/defs.cpp' object='defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o defs.o `test -f 'base/defs.cpp' || echo '$(srcdir)/'`base/defs.cpp

defs.obj: base/defs.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT defs.obj -MD -MP -MF "$(DEPDIR)/defs.Tpo" -c -o defs.obj `if test -f 'base/defs.cpp'; then $(CYGPATH_W) 'base/defs.cpp'; else $(CYGPATH_W) '$(srcdir)/base/defs.cpp'; fi`; \
	then mv -f "$(DEPDIR)/defs.Tpo" "$(DEPDIR)/defs.Po"; else rm -f "$(DEPDIR)/defs.Tpo"; exit 1; fi
#	source='base/defs.cpp' object='defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o defs.obj `if test -f 'base/defs.cpp'; then $(CYGPATH_W) 'base/defs.cpp'; else $(CYGPATH_W) '$(srcdir)/base/defs.cpp'; fi`

error.o: base/error.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT error.o -MD -MP -MF "$(DEPDIR)/error.Tpo" -c -o error.o `test -f 'base/error.cpp' || echo '$(srcdir)/'`base/error.cpp; \
	then mv -f "$(DEPDIR)/error.Tpo" "$(DEPDIR)/error.Po"; else rm -f "$(DEPDIR)/error.Tpo"; exit 1; fi
#	source='base/error.cpp' object='error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o error.o `test -f 'base/error.cpp' || echo '$(srcdir)/'`base/error.cpp

error.obj: base/error.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT error.obj -MD -MP -MF "$(DEPDIR)/error.Tpo" -c -o error.obj `if test -f 'base/error.cpp'; then $(CYGPATH_W) 'base/error.cpp'; else $(CYGPATH_W) '$(srcdir)/base/error.cpp'; fi`; \
	then mv -f "$(DEPDIR)/error.Tpo" "$(DEPDIR)/error.Po"; else rm -f "$(DEPDIR)/error.Tpo"; exit 1; fi
#	source='base/error.cpp' object='error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o error.obj `if test -f 'base/error.cpp'; then $(CYGPATH_W) 'base/error.cpp'; else $(CYGPATH_W) '$(srcdir)/base/error.cpp'; fi`

func.o: base/func.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT func.o -MD -MP -MF "$(DEPDIR)/func.Tpo" -c -o func.o `test -f 'base/func.cpp' || echo '$(srcdir)/'`base/func.cpp; \
	then mv -f "$(DEPDIR)/func.Tpo" "$(DEPDIR)/func.Po"; else rm -f "$(DEPDIR)/func.Tpo"; exit 1; fi
#	source='base/func.cpp' object='func.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o func.o `test -f 'base/func.cpp' || echo '$(srcdir)/'`base/func.cpp

func.obj: base/func.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT func.obj -MD -MP -MF "$(DEPDIR)/func.Tpo" -c -o func.obj `if test -f 'base/func.cpp'; then $(CYGPATH_W) 'base/func.cpp'; else $(CYGPATH_W) '$(srcdir)/base/func.cpp'; fi`; \
	then mv -f "$(DEPDIR)/func.Tpo" "$(DEPDIR)/func.Po"; else rm -f "$(DEPDIR)/func.Tpo"; exit 1; fi
#	source='base/func.cpp' object='func.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o func.obj `if test -f 'base/func.cpp'; then $(CYGPATH_W) 'base/func.cpp'; else $(CYGPATH_W) '$(srcdir)/base/func.cpp'; fi`

logger.o: base/logger.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT logger.o -MD -MP -MF "$(DEPDIR)/logger.Tpo" -c -o logger.o `test -f 'base/logger.cpp' || echo '$(srcdir)/'`base/logger.cpp; \
	then mv -f "$(DEPDIR)/logger.Tpo" "$(DEPDIR)/logger.Po"; else rm -f "$(DEPDIR)/logger.Tpo"; exit 1; fi
#	source='base/logger.cpp' object='logger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o logger.o `test -f 'base/logger.cpp' || echo '$(srcdir)/'`base/logger.cpp

logger.obj: base/logger.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT logger.obj -MD -MP -MF "$(DEPDIR)/logger.Tpo" -c -o logger.obj `if test -f 'base/logger.cpp'; then $(CYGPATH_W) 'base/logger.cpp'; else $(CYGPATH_W) '$(srcdir)/base/logger.cpp'; fi`; \
	then mv -f "$(DEPDIR)/logger.Tpo" "$(DEPDIR)/logger.Po"; else rm -f "$(DEPDIR)/logger.Tpo"; exit 1; fi
#	source='base/logger.cpp' object='logger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o logger.obj `if test -f 'base/logger.cpp'; then $(CYGPATH_W) 'base/logger.cpp'; else $(CYGPATH_W) '$(srcdir)/base/logger.cpp'; fi`

memorymanager.o: base/memorymanager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT memorymanager.o -MD -MP -MF "$(DEPDIR)/memorymanager.Tpo" -c -o memorymanager.o `test -f 'base/memorymanager.cpp' || echo '$(srcdir)/'`base/memorymanager.cpp; \
	then mv -f "$(DEPDIR)/memorymanager.Tpo" "$(DEPDIR)/memorymanager.Po"; else rm -f "$(DEPDIR)/memorymanager.Tpo"; exit 1; fi
#	source='base/memorymanager.cpp' object='memorymanager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o memorymanager.o `test -f 'base/memorymanager.cpp' || echo '$(srcdir)/'`base/memorymanager.cpp

memorymanager.obj: base/memorymanager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT memorymanager.obj -MD -MP -MF "$(DEPDIR)/memorymanager.Tpo" -c -o memorymanager.obj `if test -f 'base/memorymanager.cpp'; then $(CYGPATH_W) 'base/memorymanager.cpp'; else $(CYGPATH_W) '$(srcdir)/base/memorymanager.cpp'; fi`; \
	then mv -f "$(DEPDIR)/memorymanager.Tpo" "$(DEPDIR)/memorymanager.Po"; else rm -f "$(DEPDIR)/memorymanager.Tpo"; exit 1; fi
#	source='base/memorymanager.cpp' object='memorymanager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o memorymanager.obj `if test -f 'base/memorymanager.cpp'; then $(CYGPATH_W) 'base/memorymanager.cpp'; else $(CYGPATH_W) '$(srcdir)/base/memorymanager.cpp'; fi`

podvector.o: base/podvector.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT podvector.o -MD -MP -MF "$(DEPDIR)/podvector.Tpo" -c -o podvector.o `test -f 'base/podvector.cpp' || echo '$(srcdir)/'`base/podvector.cpp; \
	then mv -f "$(DEPDIR)/podvector.Tpo" "$(DEPDIR)/podvector.Po"; else rm -f "$(DEPDIR)/podvector.Tpo"; exit 1; fi
#	source='base/podvector.cpp' object='podvector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o podvector.o `test -f 'base/podvector.cpp' || echo '$(srcdir)/'`base/podvector.cpp

podvector.obj: base/podvector.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT podvector.obj -MD -MP -MF "$(DEPDIR)/podvector.Tpo" -c -o podvector.obj `if test -f 'base/podvector.cpp'; then $(CYGPATH_W) 'base/podvector.cpp'; else $(CYGPATH_W) '$(srcdir)/base/podvector.cpp'; fi`; \
	then mv -f "$(DEPDIR)/podvector.Tpo" "$(DEPDIR)/podvector.Po"; else rm -f "$(DEPDIR)/podvector.Tpo"; exit 1; fi
#	source='base/podvector.cpp' object='podvector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o podvector.obj `if test -f 'base/podvector.cpp'; then $(CYGPATH_W) 'base/podvector.cpp'; else $(CYGPATH_W) '$(srcdir)/base/podvector.cpp'; fi`

runtime.o: base/runtime.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT runtime.o -MD -MP -MF "$(DEPDIR)/runtime.Tpo" -c -o runtime.o `test -f 'base/runtime.cpp' || echo '$(srcdir)/'`base/runtime.cpp; \
	then mv -f "$(DEPDIR)/runtime.Tpo" "$(DEPDIR)/runtime.Po"; else rm -f "$(DEPDIR)/runtime.Tpo"; exit 1; fi
#	source='base/runtime.cpp' object='runtime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o runtime.o `test -f 'base/runtime.cpp' || echo '$(srcdir)/'`base/runtime.cpp

runtime.obj: base/runtime.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT runtime.obj -MD -MP -MF "$(DEPDIR)/runtime.Tpo" -c -o runtime.obj `if test -f 'base/runtime.cpp'; then $(CYGPATH_W) 'base/runtime.cpp'; else $(CYGPATH_W) '$(srcdir)/base/runtime.cpp'; fi`; \
	then mv -f "$(DEPDIR)/runtime.Tpo" "$(DEPDIR)/runtime.Po"; else rm -f "$(DEPDIR)/runtime.Tpo"; exit 1; fi
#	source='base/runtime.cpp' object='runtime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o runtime.obj `if test -f 'base/runtime.cpp'; then $(CYGPATH_W) 'base/runtime.cpp'; else $(CYGPATH_W) '$(srcdir)/base/runtime.cpp'; fi`

string.o: base/string.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT string.o -MD -MP -MF "$(DEPDIR)/string.Tpo" -c -o string.o `test -f 'base/string.cpp' || echo '$(srcdir)/'`base/string.cpp; \
	then mv -f "$(DEPDIR)/string.Tpo" "$(DEPDIR)/string.Po"; else rm -f "$(DEPDIR)/string.Tpo"; exit 1; fi
#	source='base/string.cpp' object='string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o string.o `test -f 'base/string.cpp' || echo '$(srcdir)/'`base/string.cpp

string.obj: base/string.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT string.obj -MD -MP -MF "$(DEPDIR)/string.Tpo" -c -o string.obj `if test -f 'base/string.cpp'; then $(CYGPATH_W) 'base/string.cpp'; else $(CYGPATH_W) '$(srcdir)/base/string.cpp'; fi`; \
	then mv -f "$(DEPDIR)/string.Tpo" "$(DEPDIR)/string.Po"; else rm -f "$(DEPDIR)/string.Tpo"; exit 1; fi
#	source='base/string.cpp' object='string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o string.obj `if test -f 'base/string.cpp'; then $(CYGPATH_W) 'base/string.cpp'; else $(CYGPATH_W) '$(srcdir)/base/string.cpp'; fi`

vmem.o: base/vmem.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vmem.o -MD -MP -MF "$(DEPDIR)/vmem.Tpo" -c -o vmem.o `test -f 'base/vmem.cpp' || echo '$(srcdir)/'`base/vmem.cpp; \
	then mv -f "$(DEPDIR)/vmem.Tpo" "$(DEPDIR)/vmem.Po"; else rm -f "$(DEPDIR)/vmem.Tpo"; exit 1; fi
#	source='base/vmem.cpp' object='vmem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vmem.o `test -f 'base/vmem.cpp' || echo '$(srcdir)/'`base/vmem.cpp

vmem.obj: base/vmem.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vmem.obj -MD -MP -MF "$(DEPDIR)/vmem.Tpo" -c -o vmem.obj `if test -f 'base/vmem.cpp'; then $(CYGPATH_W) 'base/vmem.cpp'; else $(CYGPATH_W) '$(srcdir)/base/vmem.cpp'; fi`; \
	then mv -f "$(DEPDIR)/vmem.Tpo" "$(DEPDIR)/vmem.Po"; else rm -f "$(DEPDIR)/vmem.Tpo"; exit 1; fi
#	source='base/vmem.cpp' object='vmem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vmem.obj `if test -f 'base/vmem.cpp'; then $(CYGPATH_W) 'base/vmem.cpp'; else $(CYGPATH_W) '$(srcdir)/base/vmem.cpp'; fi`

zone.o: base/zone.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zone.o -MD -MP -MF "$(DEPDIR)/zone.Tpo" -c -o zone.o `test -f 'base/zone.cpp' || echo '$(srcdir)/'`base/zone.cpp; \
	then mv -f "$(DEPDIR)/zone.Tpo" "$(DEPDIR)/zone.Po"; else rm -f "$(DEPDIR)/zone.Tpo"; exit 1; fi
#	source='base/zone.cpp' object='zone.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zone.o `test -f 'base/zone.cpp' || echo '$(srcdir)/'`base/zone.cpp

zone.obj: base/zone.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zone.obj -MD -MP -MF "$(DEPDIR)/zone.Tpo" -c -o zone.obj `if test -f 'base/zone.cpp'; then $(CYGPATH_W) 'base/zone.cpp'; else $(CYGPATH_W) '$(srcdir)/base/zone.cpp'; fi`; \
	then mv -f "$(DEPDIR)/zone.Tpo" "$(DEPDIR)/zone.Po"; else rm -f "$(DEPDIR)/zone.Tpo"; exit 1; fi
#	source='base/zone.cpp' object='zone.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zone.obj `if test -f 'base/zone.cpp'; then $(CYGPATH_W) 'base/zone.cpp'; else $(CYGPATH_W) '$(srcdir)/base/zone.cpp'; fi`

x86assembler.o: x86/x86assembler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86assembler.o -MD -MP -MF "$(DEPDIR)/x86assembler.Tpo" -c -o x86assembler.o `test -f 'x86/x86assembler.cpp' || echo '$(srcdir)/'`x86/x86assembler.cpp; \
	then mv -f "$(DEPDIR)/x86assembler.Tpo" "$(DEPDIR)/x86assembler.Po"; else rm -f "$(DEPDIR)/x86assembler.Tpo"; exit 1; fi
#	source='x86/x86assembler.cpp' object='x86assembler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86assembler.o `test -f 'x86/x86assembler.cpp' || echo '$(srcdir)/'`x86/x86assembler.cpp

x86assembler.obj: x86/x86assembler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86assembler.obj -MD -MP -MF "$(DEPDIR)/x86assembler.Tpo" -c -o x86assembler.obj `if test -f 'x86/x86assembler.cpp'; then $(CYGPATH_W) 'x86/x86assembler.cpp'; else $(CYGPATH_W) '$(srcdir)/x86/x86assembler.cpp'; fi`; \
	then mv -f "$(DEPDIR)/x86assembler.Tpo" "$(DEPDIR)/x86assembler.Po"; else rm -f "$(DEPDIR)/x86assembler.Tpo"; exit 1; fi
#	source='x86/x86assembler.cpp' object='x86assembler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86assembler.obj `if test -f 'x86/x86assembler.cpp'; then $(CYGPATH_W) 'x86/x86assembler.cpp'; else $(CYGPATH_W) '$(srcdir)/x86/x86assembler.cpp'; fi`

x86compiler.o: x86/x86compiler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86compiler.o -MD -MP -MF "$(DEPDIR)/x86compiler.Tpo" -c -o x86compiler.o `test -f 'x86/x86compiler.cpp' || echo '$(srcdir)/'`x86/x86compiler.cpp; \
	then mv -f "$(DEPDIR)/x86compiler.Tpo" "$(DEPDIR)/x86compiler.Po"; else rm -f "$(DEPDIR)/x86compiler.Tpo"; exit 1; fi
#	source='x86/x86compiler.cpp' object='x86compiler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86compiler.o `test -f 'x86/x86compiler.cpp' || echo '$(srcdir)/'`x86/x86compiler.cpp

x86compiler.obj: x86/x86compiler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86compiler.obj -MD -MP -MF "$(DEPDIR)/x86compiler.Tpo" -c -o x86compiler.obj `if test -f 'x86/x86compiler.cpp'; then $(CYGPATH_W) 'x86/x86compiler.cpp'; else $(CYGPATH_W) '$(srcdir)/x86/x86compiler.cpp'; fi`; \
	then mv -f "$(DEPDIR)/x86compiler.Tpo" "$(DEPDIR)/x86compiler.Po"; else rm -f "$(DEPDIR)/x86compiler.Tpo"; exit 1; fi
#	source='x86/x86compiler.cpp' object='x86compiler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86compiler.obj `if test -f 'x86/x86compiler.cpp'; then $(CYGPATH_W) 'x86/x86compiler.cpp'; else $(CYGPATH_W) '$(srcdir)/x86/x86compiler.cpp'; fi`

x86context.o: x86/x86context.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86context.o -MD -MP -MF "$(DEPDIR)/x86context.Tpo" -c -o x86context.o `test -f 'x86/x86context.cpp' || echo '$(srcdir)/'`x86/x86context.cpp; \
	then mv -f "$(DEPDIR)/x86context.Tpo" "$(DEPDIR)/x86context.Po"; else rm -f "$(DEPDIR)/x86context.Tpo"; exit 1; fi
#	source='x86/x86context.cpp' object='x86context.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86context.o `test -f 'x86/x86context.cpp' || echo '$(srcdir)/'`x86/x86context.cpp

x86context.obj: x86/x86context.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86context.obj -MD -MP -MF "$(DEPDIR)/x86context.Tpo" -c -o x86context.obj `if test -f 'x86/x86context.cpp'; then $(CYGPATH_W) 'x86/x86context.cpp'; else $(CYGPATH_W) '$(srcdir)/x86/x86context.cpp'; fi`; \
	then mv -f "$(DEPDIR)/x86context.Tpo" "$(DEPDIR)/x86context.Po"; else rm -f "$(DEPDIR)/x86context.Tpo"; exit 1; fi
#	source='x86/x86context.cpp' object='x86context.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86context.obj `if test -f 'x86/x86context.cpp'; then $(CYGPATH_W) 'x86/x86context.cpp'; else $(CYGPATH_W) '$(srcdir)/x86/x86context.cpp'; fi`

x86cpu.o: x86/x86cpu.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86cpu.o -MD -MP -MF "$(DEPDIR)/x86cpu.Tpo" -c -o x86cpu.o `test -f 'x86/x86cpu.cpp' || echo '$(srcdir)/'`x86/x86cpu.cpp; \
	then mv -f "$(DEPDIR)/x86cpu.Tpo" "$(DEPDIR)/x86cpu.Po"; else rm -f "$(DEPDIR)/x86cpu.Tpo"; exit 1; fi
#	source='x86/x86cpu.cpp' object='x86cpu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86cpu.o `test -f 'x86/x86cpu.cpp' || echo '$(srcdir)/'`x86/x86cpu.cpp

x86cpu.obj: x86/x86cpu.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86cpu.obj -MD -MP -MF "$(DEPDIR)/x86cpu.Tpo" -c -o x86cpu.obj `if test -f 'x86/x86cpu.cpp'; then $(CYGPATH_W) 'x86/x86cpu.cpp'; else $(CYGPATH_W) '$(srcdir)/x86/x86cpu.cpp'; fi`; \
	then mv -f "$(DEPDIR)/x86cpu.Tpo" "$(DEPDIR)/x86cpu.Po"; else rm -f "$(DEPDIR)/x86cpu.Tpo"; exit 1; fi
#	source='x86/x86cpu.cpp' object='x86cpu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86cpu.obj `if test -f 'x86/x86cpu.cpp'; then $(CYGPATH_W) 'x86/x86cpu.cpp'; else $(CYGPATH_W) '$(srcdir)/x86/x86cpu.cpp'; fi`

x86defs.o: x86/x86defs.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86defs.o -MD -MP -MF "$(DEPDIR)/x86defs.Tpo" -c -o x86defs.o `test -f 'x86/x86defs.cpp' || echo '$(srcdir)/'`x86/x86defs.cpp; \
	then mv -f "$(DEPDIR)/x86defs.Tpo" "$(DEPDIR)/x86defs.Po"; else rm -f "$(DEPDIR)/x86defs.Tpo"; exit 1; fi
#	source='x86/x86defs.cpp' object='x86defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86defs.o `test -f 'x86/x86defs.cpp' || echo '$(srcdir)/'`x86/x86defs.cpp

x86defs.obj: x86/x86defs.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86defs.obj -MD -MP -MF "$(DEPDIR)/x86defs.Tpo" -c -o x86defs.obj `if test -f 'x86/x86defs.cpp'; then $(CYGPATH_W) 'x86/x86defs.cpp'; else $(CYGPATH_W) '$(srcdir)/x86/x86defs.cpp'; fi`; \
	then mv -f "$(DEPDIR)/x86defs.Tpo" "$(DEPDIR)/x86defs.Po"; else rm -f "$(DEPDIR)/x86defs.Tpo"; exit 1; fi
#	source='x86/x86defs.cpp' object='x86defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86defs.obj `if test -f 'x86/x86defs.cpp'; then $(CYGPATH_W) 'x86/x86defs.cpp'; else $(CYGPATH_W) '$(srcdir)/x86/x86defs.cpp'; fi`

x86func.o: x86/x86func.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86func.o -MD -MP -MF "$(DEPDIR)/x86func.Tpo" -c -o x86func.o `test -f 'x86/x86func.cpp' || echo '$(srcdir)/'`x86/x86func.cpp; \
	then mv -f "$(DEPDIR)/x86func.Tpo" "$(DEPDIR)/x86func.Po"; else rm -f "$(DEPDIR)/x86func.Tpo"; exit 1; fi
#	source='x86/x86func.cpp' object='x86func.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86func.o `test -f 'x86/x86func.cpp' || echo '$(srcdir)/'`x86/x86func.cpp

x86func.obj: x86/x86func.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86func.obj -MD -MP -MF "$(DEPDIR)/x86func.Tpo" -c -o x86func.obj `if test -f 'x86/x86func.cpp'; then $(CYGPATH_W) 'x86/x86func.cpp'; else $(CYGPATH_W) '$(srcdir)/x86/x86func.cpp'; fi`; \
	then mv -f "$(DEPDIR)/x86func.Tpo" "$(DEPDIR)/x86func.Po"; else rm -f "$(DEPDIR)/x86func.Tpo"; exit 1; fi
#	source='x86/x86func.cpp' object='x86func.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86func.obj `if test -f 'x86/x86func.cpp'; then $(CYGPATH_W) 'x86/x86func.cpp'; else $(CYGPATH_W) '$(srcdir)/x86/x86func.cpp'; fi`
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkdir_p) $(distdir)/.. $(distdir)/base $(distdir)/x86
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(HEADERS) config.h
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am am--refresh check \
	check-am clean clean-generic clean-noinstLIBRARIES \
	clean-recursive ctags ctags-recursive dist dist-all dist-bzip2 \
	dist-gzip dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-recursive distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
